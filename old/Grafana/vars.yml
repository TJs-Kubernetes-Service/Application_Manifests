# The namespace to be created and used for the deployment.
namespace: 'grafana'

# The MetalLB Address Pool from which you want to obtain an IP address.
load_balancer_address_pool: 'VLAN50'

# The IP address within the Address Pool to which you want to bind the service for Grafana.
grafana_load_balancer_ip: '192.168.50.10'

# The IP address within the Address Pool to which you want to bind the service for Prometheus.
prometheus_load_balancer_ip: '192.168.50.11'

# The IP address within the Address Pool to which you want to bind the service for Alertmanager.
alertmanager_load_balancer_ip: '192.168.50.12'

# The IP address within the Address Pool to which you want to bind the services for InfluxDB.
influxdb_load_balancer_ip: '192.168.50.13'

# The hostname with which you want to associate Grafana.
grafana_hostname: 'mimas.sol.milkyway'

# The hostname with which you want to assocaite Prometheus.
prometheus_hostname: 'enceladus.sol.milkyway'

# The hostname with which you want to associate Alertmanager.
alertmanager_hostname: 'dione.sol.milkyway'

# The hostname with which you want to associate InfluxDB.
influxdb_hostname: 'rhea.sol.milkyway'

# The UID that is used to run Grafana within the Docker container.
# If you are getting permission denied issues on startup, search for an updated UID or file an issue.
grafana_uid: '472'

# The UID that is used to run Prometheus within the Docker container.
# If you are getting permission denied issues on startup, search for an updated UID or file an issue.
prometheus_uid: '65534'

# The SMTP server used to send mail from Grafana.
smtp_server: "smtp.gmail.com"

# The port that the SMTP server uses for communication.
smtp_port: "587"

# The username used to authenticate against the SMTP server.
smtp_username: "thomaszimmerman93@gmail.com"

# The password used to authenticate against the SMTP server.
smtp_password: "REPLACEME"

# The username to be used for Grafana.
grafana_username: 'tj'

# The password to be used for Grafan.
grafana_password: 'REPLACEME'

# The password to be used for the Postgres database.
postgres_password: 'REPLACEME'

# The list of Node Exporter targets for Prometheus to scrape.
# Node Exporter runs on 9100 with this configuration.
node_exporter_targets: "['ceres:9100', 'eris:9100', 'haumea:9100', 'pluto:9100']"

# The list of Cadvisor targets for Prometheus to scrape.
# Cadvisor runs on 10251 with this configuration.
cadvisor_targets: "['ceres:10251', 'eris:10251', 'haumea:10251', 'pluto:10251']"

# The primary database to be created on InfluxDB
influxdb_db: 'influxdb'

# The admin user for the InfluxDB server
influxdb_user: 'influxdb'

# The passwordt o be used for the admin user on InfluxDB.
influxdb_password: 'REPLACEME'

# The commands you want to run on the InfluxDB instance on launch. Separate multiple commands by a ';'.
influxdb_cmds: 'CREATE DATABASE unifi; CREATE DATABASE ups; CREATE DATABASE odroid; CREATE DATABASE saturn; CREATE DATABASE jupiter'

# The read only user account on the Unifi Controller for Unifi Poller.
unifi_username: 'influx'

# The password for the read only user account on the Unifi Controller for Unifi Poller.
unifi_password: 'REPLACEME'

# The URL of the Unifi Controller
unifi_url: 'https://unifi-controller.sputnik.sol.milkyway'

# Set to true if your Unifi Controller does not allow login cookies to be reused.
unifi_reauthenticate: 'false'

# Set to true if you have a valid SSL certificate in front of your Unifi Controller that you wish to validate.
unifi_validate_ssl: 'false'

# Set to true if you have a valid SSl certificate in front of your InfluxDB that you wish to validate.
unifi_influx_validate_ssl: 'false'

# Enable collection of Intrusion Detection System Data from the Unifi Controller.
unifi_collect_ids: 'false'

# The frequency at which you poll the Unifi Controller. Do not set this to less than 30 seconds.
unifi_polling_interval: "30s"

# The sites on your Unifi Controller that you want to poll.
# ["default"] = first site on controller
# ["all"]     = all sites.
unifi_sites: '["all"]'

# Whether or not InfluxDB is using SSL.
varken_influxdb_ssl: "false"

# The connection string for your Tautulli server.
varken_tautulli_url: "charon.sol.milkyway:8181"

# The API Key for your Tautulli server.
varken_tautulli_api_key: "REPLACEME"

# Whether or not Tautulli is using SSL.
varken_tautulli_ssl: "false"

# The connection string for your Sonarr server.
varken_sonarr_url: "phobos.sol.milkyway:8989"

# The API Key for your Sonarr server.
varken_sonarr_api_key: "REPLACEME"

# Whether or not Sonarr is using SSL.
varken_sonarr_ssl: "false"

# The connection string for your Radarr server.
varken_radarr_url: "deimos.sol.milkyway:7878"

# The API Key for your Radarr server.
varken_radarr_api_key: "REPLACEME"

# Whether or not Radarr is using SSL.
varken_radarr_ssl: "false"

# The Hostname of the Pi-Hole server that you want to monitor.
pihole_hostname: "explorer.sol.milkyway"

# The password of the Pi-Hole server that you want to monitor.
pihole_password: "REPLACEME"

# The Google Analytics tracking ID to be used for monitoring website traffic.
google_analytics_tracking_id: 'TRACKINGID'

# The comma-separated list of Grafana Plugins you wish to install.
# Found here: https://grafana.com/grafana/plugins?type=datasource
installed_plugins: 'raintank-worldping-app,grafana-clock-panel,natel-discrete-panel,grafana-piechart-panel,agenty-flowcharting-panel,mtanda-histogram-panel,mxswat-separator-panel,snuids-trafficlights-panel'

# The hostname or IP address of the NFS server on which you want to store Persistent Volume content.
nfs_server: 'saturn.sol.milkyway'

# The NFS mountpoint to be used for preserving the database.
postgres_data_dir: '/SaturnPool/Kubernetes/Grafana/postgres'

# The NFS mountpoint to be used for preserving the Stitch database.
postgres_stitch_data_dir: '/SaturnPool/Kubernetes/Grafana/postgres_stitch'

# The NFS mountpoint to be used for preserving the configuration of Prometheus.
prometheus_data_dir: '/SaturnPool/Kubernetes/Grafana/prometheus'

# The NFS mountpoint to be used for preserving the configuration of Telegraf.
telegraf_data_dir: '/SaturnPool/Kubernetes/Grafana/telegraf'

# The NFS mountpoint to be used for preserving the InfluxDB metrics.
influxdb_dir: '/SaturnPool/Kubernetes/Grafana/influxdb'


####Telegraf Configuration####

# The default interval at which the Telegraf Agent collects data from an input.
agent_interval: "10s"

# The list of External DNS Servers you wish to use for the `dns_query` input.
external_dns_servers: '["1.1.1.1", "8.8.8.8"]'

# The list of External domains you wish to use for the `http_response`, `dns_query` & `ping` inputs.
external_domains: '["https://tjzimmerman.com", "https://www.tjzimmerman.com", "https://tjzimmerman.dev", "https://www.tjzimmerman.dev", "https://vpn.tjzimmerman.com", "https://nextcloud.tjzimmerman.com"]'

# The list of Internal DNS Servers you wish to use for the `dns_query` input.
internal_dns_servers: '["192.168.1.100", "192.168.1.110"]'

# The list of Internal domains you wish to use for the `dns_query` & `ping` inputs.
internal_domains: '["ariel.sol.milkyway", "aurora.sol.milkyway", "ceres.sol.milkyway", "charon.sol.milkyway", "daphne.sol.milkyway", "deimos.sol.milkyway", "dione.sol.milkyway", "doris.sol.milkyway", "enceladus.sol.milkyway", "eris.sol.milkyway", "europa.sol.milkyway", "explorer.sol.milkyway", "ganymede.sol.milkyway", "haumea.sol.milkyway", "hebe.sol.milkyway", "hubble.sol.milkyway", "io.sol.milkyway", "janus.sol.milkyway", "juno.sol.milkyway", "jupiter.sol.milkyway", "luna.sol.milkyway", "mars.sol.milkyway", "mimas.sol.milkyway", "nemesis.sol.milkyway", "nix.sol.milkyway", "phobos.sol.milkyway", "pirs.sol.milkyway", "pluto.sol.milkyway", "psyche.sol.milkyway", "rhea.sol.milkyway", "saturn.sol.milkyway", "sol.sol.milkyway", "sputnik.sol.milkyway", "sylvia.sol.milkyway", "titan.sol.milkyway", "ursula.sol.milkyway", "venus.sol.milkyway", "vesta.sol.milkyway", "voyager.sol.milkyway", "powerdns-admin.sputnik.sol.milkyway", "powerdns-authoritative.sputnik.sol.milkyway", "powerdns-recursor.sputnik.sol.milkyway", "unifi-controller.sputnik.sol.milkyway", "unms.sputnik.sol.milkyway"]'

# The list of Internal Connection Strings you wish to use for the `http_response` input.
internal_domain_connection_strings: '["http://ariel.sol.milkyway:8080/secure/Dashboard.jspa", "http://charon.sol.milkyway:8181/home", "http://deimos:7878/login?returnUrl=/", "http://dione.sol.milkyway:9093", "http://enceladus.sol.milkyway:9090", "http://europa.sol.milkyway:8090/login.action?os_destination=%2Findex.action&permissionViolation=true", "http://explorer.sol.milkyway/admin", "http://io.sol.milkyway:8112/", "http://janus.sol.milkyway:32400/web/index.html#", "http://mimas.sol.milkyway:3000/login", "http://nix.sol.milkyway/", "http://phobos.sol.milkyway:8989/login?returnUrl=/", "https://saturn.sol.milkyway:8006", "https://sol.sol.milkyway/", "https://sputnik.sol.milkyway:444/", "https://unifi-controller.sputnik.sol.milkyway/manage/site/default/dashboard", "https://titan.sol.milkyway:943", "https://powerdns-admin.sputnik.sol.milkyway/login", "https://powerdns-authoritative.sputnik.sol.milkyway/", "https://powerdns-recursor.sputnik.sol.milkyway"]'

# The list of GitHub repositories to monitor with the `github` input.
github_repositories:  '["zimmertr/Personal-Website-With-JS-Terminal-Emulator", "zimmertr/Old-Resume-Website", "zimmertr/Miscellaneous-Dotfiles", "zimmertr/CPP-Homework-Stuff", "zimmertr/PongR", "zimmertr/Alert-Thrower", "zimmertr/VMware-vRealize-Operations-Hacks", "zimmertr/DynamoDB-Load-Generator", "zimmertr/MongoDB-Load-Generator", "zimmertr/CSS-HTML5-Lessons", "zimmertr/Small-Shell-Scripts", "zimmertr/Left-Right-LED-Flash-Arduino-Project", "zimmertr/Stoplight-Arduino-Project", "zimmertr/Siren-Thing-Arduino-Project", "zimmertr/Conky-Configuration", "zimmertr/i3wm-Configuration", "zimmertr/VB6-High-School-Projects", "zimmertr/Web-Programming-High-School-Projects", "zimmertr/Game-Maker-High-School-Projects", "zimmertr/MIPS-Assembly-Learning-Exercises", "zimmertr/JAVA-Learning-Exercises", "zimmertr/Adventure-Game", "zimmertr/Craps", "zimmertr/Chuck-a-Luck", "zimmertr/Credit-Card-Database", "zimmertr/Base-Converter", "zimmertr/RSA-Thing", "zimmertr/Vending-Machine", "zimmertr/Polymorphism-and-Interfaces", "zimmertr/Bank-Account", "zimmertr/Stopwatch-Timer", "zimmertr/MIPS-Single-Cycle-CPU", "zimmertr/Arithmetic-Logic-Unit", "zimmertr/CSV-Dataset-Migrator", "zimmertr/NGINX-Reverse-Proxy-Config", "zimmertr/LibreNMS-Example-Alerts", "zimmertr/Bootstrap-Arch-Linux", "zimmertr/Internet-Speed-Averager", "zimmertr/Datadog-Configs", "zimmertr/Statsbot", "zimmertr/Weatherpy-Docker", "zimmertr/Homelab-Configs", "zimmertr/Network-Diagram", "zimmertr/Bootstrap-Kubernetes-with-QEMU", "zimmertr/IP-Geolocator", "zimmertr/Deploy-Domain-Controller", "zimmertr/Build-HA-RabbitMQ-Cluster", "zimmertr/Build-HA-Couchbase-Cluster", "zimmertr/Deploy-Azure-ASM-VM", "zimmertr/Join-AD-Domain", "zimmertr/Initialize-and-Partition-Windows-Disks", "zimmertr/SQL-Server-Configurator", "zimmertr/Azure-DF-Monitoring-Bot", "zimmertr/Bootstrap-Kubernetes-with-LXC", "zimmertr/Project-Ideas", "zimmertr/Kubernetes-Manifests", "zimmertr/Odroid-Scripts", "zimmertr/external-storage", "zimmertr/unifi-poller"]'

# The Access Token used to monitor with the `github` input.
github_access_token: "REPLACEME"

# The API Key to be used with the `openweathermap` input.
openweathermap_api_key: "REPLACEME"

# The list of cities to monitor from the `openweathermap` input.
# Seattle, Los Angeles, Grand Rapids, West Branch, Nashville
openweathermap_city_ids: '["5809844", "5359777", "4994358", "5014413", "4644585"]'

# The connection string for a TCP Socket to be monitored with the `net_response` input.
# External
net_response_vpn: "vpn.tjzimmerman.com:443"
net_response_nextcloud: "nextcloud.tjzimmerman.com:443"
net_response_wwwcom: "www.tjzimmerman.com:443"
net_response_wwwdev: "www.tjzimmerman.dev:443"
net_response_com: "tjzimmerman.com:443"
net_response_dev: "tjzimmerman.dev:443"

# Internal
net_response_proxmox: "saturn.sol.milkyway:8006"
net_response_plex: "janus.sol.milkyway:32400"
net_response_deluge: "io.sol.milkyway:8112"
net_response_website: "nix.sol.milkyway:80"
net_response_confluence: "europa.sol.milkyway:8090"
net_response_grafana: "mimas.sol.milkyway:3000"
net_response_jira: "ariel.sol.milkyway:8080"
net_response_pihole: "explorer.sol.milkyway:80"
net_response_unifi: "unifi-controller.sputnik.sol.milkyway:443"
net_response_powerdns: "powerdns-admin.sputnik.sol.milkyway:443"
net_response__powerpanel: "saturn.sol.milkyway:3052"
net_response_prometheus: "enceladus.sol.milkyway:9090"
net_response_radarr: "deimos.sol.milkyway:7878"
net_response_sonarr: "phobos.sol.milkyway:8989"
net_response_tautulli: "charon.sol.milkyway:8181"
net_response_alertmanager: "dione.sol.milkyway:9093"
net_response_influxdb: "rhea.sol.milkyway:8086"

# Private - Kubernetes
net_response_node_exporter: "node-exporter.kube-system.svc.cluster.local:9100"
net_response_kube_state_metrics: "kube-state-metrics.grafana.svc.cluster.local:8080"
net_response_metrics_scraper: "dashboard-metrics-scraper.kubernetes-dashboard.svc.cluster.local:8000"
net_response_dashboard: "kubernetes-dashboard.kubernetes-dashboard.svc.cluster.local:8443"
net_response_kubedns_53: "kube-dns.kube-system.svc.cluster.local:53"
net_response_kubedns_9153: "kube-dns.kube-system.svc.cluster.local:9153"
net_response_kubelet: "kubelet.kube-system.svc.cluster.local:10250"
net_response_postgres_confluence: "postgres.confluence.svc.cluster.local:5432"
net_response_postgres_grafana: "postgres.grafana.svc.cluster.local:5432"
net_response_postgres_jira: "postgres.jira-software.svc.cluster.local:5432"
net_response_postgres_nextcloud: "postgres.nextcloud.svc.cluster.local:5432"

# The list of SSL Certificates to monitor with the `x509_cert` input.
ssl_certificates: '["tcp://tjzimmerman.com:443", "tcp://pluto.sol.milkyway:6443", "tcp://unifi-controller.sputnik.sol.milkyway:443"]'

# The connection string for the PostgreSQL database to monitor with the `postgresql` inputs.
postgres_nextcloud_connection_string: "postgres://nextcloud:REPLACEME@postgres/nextcloud?sslmode=disable"
postgres_jira_connection_string: "postgres://jira:REPLACEME@postgres/jira?sslmode=disable"
postgres_grafana_connection_string: "postgres://grafana:{{ postgres_password }}@postgres/grafana?sslmode=disable"
postgres_confluence_connection_string: "postgres://confluence:REPLACEME@postgres/confluence?sslmode=disable"
